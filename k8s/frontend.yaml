apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  labels:
    run: result
  name: result
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: result
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: result
    spec:
      containers:
      - image: gcr.io/example-project/result:1.1
        imagePullPolicy: IfNotPresent
        name: result
        ports:
        - containerPort: 5001
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: voting
    track: canary 
  name: voting
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      run: voting
      track: stable 
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: voting
        track: stable
    spec:
      containers:
      - image: gcr.io/example-project/voting:1.1
        imagePullPolicy: IfNotPresent
        name: voting
        resources: {}
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: result
  name: result
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: result
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: voting
  name: voting
  namespace: default
spec:
  ports:
  - nodePort: 31920
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: voting
  sessionAffinity: None
  type: LoadBalancer
#  type: NodePort
